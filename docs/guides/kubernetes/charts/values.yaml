replicaCount: 1
repo: scramjetorg
app: sth
version: 0.28.5

# fullnameOverride: ""

# -- Additional command line arguments to pass to STH If none set extraArgs: []
extraArgs:
  - "--identify-existing"
  - "--runtime-adapter=kubernetes"
  - "--k8s-runner-image=scramjetorg/runner:0.28.5"
  - "--k8s-runner-py-image=scramjetorg/runner-py:0.28.5"
  - "--k8s-runner-cleanup-timeout=0"
  - "--no-colors"

# -- runnerAutoNamespace apliable only with runtime-adapter=kubernetes; if true helm Chart will automaticcly adds argument with proper namespace "--k8s-namespace={{ .Release.Namespace }}"
# this is important because token that STH receives is authorized only to that specific namespace in which the STH is located
# You can also set it to false and add custom value directly to extraArgs.
kubernetesAdapter:
  runnerAutoNamespace: true
  # sets --k8s-sth-pod-host to STH POD instead of service. This is suggested solution if STH > 1
  runnerAutoSth: true

# -- Additional environment variables to pass to STH. If none set env: []
env:
  - name: DEVELOPMENT
    value: "1"
  - name: SCRAMJET_TEST_LOG
    value: "1"

# -- Additional labels. If none set env: {}
labels: {}

# -- Additional annotations. If none set env: {}
annotations: {}
 
# -- Creates serviceAccountToken, secret, role and rolebinding. Required by STH kubernetes runtime adapter
serviceAccountToken:
  enabled: true

# -- Manage STH API service
sthApi:
  enabled: true
  service:
    type: NodePort
    port: 30000
    externalTrafficPolicy: Local

# -- Manage STH Runner API service
sthRunner:
  enabled: false
  service:
    type: NodePort
    port: 30001
    externalTrafficPolicy: Cluster


## ConfigMaps
configDir: /config/

config: {}
    # config.json: |
    #   {
    #     "sequences": [
    #       { "id": "default", "args": [],  "appConfig": {} }
    #     ]
    #   }


## The storage volume used by each Pod in the StatefulSet.
persistentVolume:
  enabled: false
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  size: 10Gi
  storageClassName: "csi-rbd-sc"

# -- Init containers to add to the STH pod
initContainers: []
  # - name: download-sequence
  #   image: alpine:3.8
  #   command: [sh, -c]
  #   args:
  #     - mkdir -p /root/.scramjet_k8s_sequences/default && wget -qO- https://github.com/scramjetorg/reference-apps/releases/download/v0.24.12/hello-alice-out.tar.gz | tar -C /root/.scramjet_k8s_sequences/default -xzf- && echo 'Done'
  #   volumeMounts:
  #     - mountPath: /root/.scramjet_k8s_sequences
  #       name: scramjet-sequences


# -- livenessProbe for STH
livenessProbe:
  enabled: false
  scheme: HTTP
  path: /api/v1/version
  # Number of seconds after the container has started before startup, liveness or readiness probes are initiated. Defaults to 0 seconds. Minimum value is 0.
  initialDelaySeconds: 3
  # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
  periodSeconds: 10
  # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
  timeoutSeconds: 5
  # Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup Probes. Minimum value is 1.
  successThreshold: 1
  # When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe the Pod will be marked Unready. Defaults to 3. Minimum value is 1.
  failureThreshold: 5

# -- readinessProbe for STH
readinessProbe:
  enabled: false
  scheme: HTTP
  path: /api/v1/version
  # Number of seconds after the container has started before startup, liveness or readiness probes are initiated. Defaults to 0 seconds. Minimum value is 0.
  initialDelaySeconds: 3
  # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
  periodSeconds: 10
  # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
  timeoutSeconds: 5
  # Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup Probes. Minimum value is 1.
  successThreshold: 1
  # When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe the Pod will be marked Unready. Defaults to 3. Minimum value is 1.
  failureThreshold: 5
