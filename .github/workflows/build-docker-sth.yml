name: Build STH Docker Image

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        default: '16.x'
        type: string
      git-revision:
        required: false
        default: ${{ github.sha }}
        type: string

jobs:
  build-docker-sth-image:
    name: Build STH Docker image (Nodejs ${{ inputs.node-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git-revision }}

      - name: Setup Nodejs ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ inputs.node-version }}

      - name: Download dist-sth-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-sth-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz

      - name: Unzip dist-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz artifact
        run: ls dist*tar.gz |xargs -n1 tar -I pigz -xf

      - name: Install dependencies
        run: yarn install --ignore-engines --frozen-lockfile --prefer-offline

      - name: Update saved git hash
        run: yarn savehash

      - name: Build sth Docker image
        run: scripts/run-script.js --scope @scramjet/sth build:docker

      - name: Export image
        run: >
          docker images |
          awk '/scramjet/{print $1,$2,$3}' |
          sed 's|/| |' |
          while read repo name tag id; do
            docker save $repo/$name:$tag -o $repo-$name-$tag-node-${{ inputs.node-version }}-docker-image.tar
          done

      - name: Zip image
        run: pigz *-docker-image.tar

      - name: Upload image as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: sth-image
          path: '*.tar.gz'
          retention-days: 1
