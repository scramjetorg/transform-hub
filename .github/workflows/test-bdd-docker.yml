name: Test STH - Main suite with Docker Adapter

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        default: '16.x'
        type: string
      python-version:
        required: false
        default: '3.9'
        type: string
      test-name:
        required: true
        type: string
      test-title:
        required: true
        type: string

jobs:
  test-bdd-sth:
    name: ${{ inputs.test-title }} (${{ inputs.test-name }}, Adapter "docker", Nodejs ${{ inputs.node-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3

      - name: Download dist-sth-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-sth-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz

      - name: Download dist-refapps-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-refapps-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz

      - name: Download dockerImg Runner Node artifact
        uses: actions/download-artifact@v2
        with:
          name: dockerRunnerImg-${{ inputs.node-version }}-${{ github.event.pull_request.head.sha }}.tar.gz

      - name: Download dockerImg Runner Python artifact
        uses: actions/download-artifact@v2
        with:
          name: dockerRunnerPyImg-${{ inputs.python-version }}-${{ github.event.pull_request.head.sha }}.tar.gz

      - name: Download dockerPreRunnerImg artifact
        uses: actions/download-artifact@v2
        with:
          name: dockerPreRunnerImg-${{ inputs.node-version }}-${{ github.event.pull_request.head.sha }}.tar.gz

      - name: Unzip dockerImg-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz artifact
        run: pigz -d docker*Img*.tar.gz

      - name: Unzip dist-${{ github.event.pull_request.head.sha }}-${{ inputs.node-version }}.tar.gz artifact
        run: ls dist*tar.gz |xargs -n1 tar -I pigz -xf

      - name: Load Docker images
        run: ls -1  docker*Img*.tar| while read line; do docker load -i $line; done

      - name: Setup Nodejs ${{ inputs.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}

      - name: Inspect dist
        run: ls dist/ -la

      - name: Install dependencies
        run: yarn install --ignore-engines  --frozen-lockfile --prefer-offline --silent

      - name: Run BDD tests
      # SCRAMJET_SPAWN_JS will run cli test from dist directory
        run: RUNNER_IMGS_TAG=$(git rev-parse HEAD) yarn ${{ inputs.test-name }} -t "not @not-github"
        env:
          RUNTIME_ADAPTER: docker
          SCRAMJET_TEST_LOG: 1
          SCRAMJET_SPAWN_JS: 1
          NODE_OPTIONS: "--trace-warnings"
